---

- hosts: localhost
  connection: local
  gather_facts: no
  tasks:
    - name: create zookeeper security groups
      ec2_group:
        name: zookeeper
        aws_access_key: "{{ ec2.aws_access_key }}"
        aws_secret_key: "{{ ec2.aws_secret_key }}"
        region: "{{ ec2.region }}"
        description: Zookeeper SG
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 2181
            to_port: 2181
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0

    - name: create kafka security groups
      ec2_group:
        name: kafka
        aws_access_key: "{{ ec2.aws_access_key }}"
        aws_secret_key: "{{ ec2.aws_secret_key }}"
        region: "{{ ec2.region }}"
        description: kafka SG
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
          - proto: tcp
            from_port: 9092
            to_port: 9092
            cidr_ip: 0.0.0.0/0
        rules_egress:
          - proto: all
            cidr_ip: 0.0.0.0/0
          
    - name: Launch zookeeper instances
      ec2:
        aws_access_key: "{{ ec2.aws_access_key }}"
        aws_secret_key: "{{ ec2.aws_secret_key }}"
        key_name: "{{ ec2.key }}"
        group: "{{ ec2.zookeeper_security_group }}"
        instance_type: "{{ ec2.zookeeper_instance_type }}"
        image: "{{ ec2.image }}"
        wait: yes
        region: "{{ ec2.region }}"
        count_tag:
          Name: zookeeper
        exact_count: "{{ ec2.zookeeper_instance_count }}"
        instance_tags:
          Name: zookeeper
      register: zookeeperinstances
   
    - name: Add new instances to a host group
      add_host: name={{ item.1.public_dns_name }} groups=zookeepernodes zid={{ item.0 + 1 }} private_ip={{ item.1.private_ip }} instance_type={{ item.1.instance_type }}
      with_indexed_items: "{{ zookeeperinstances.instances }}"
    
    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=360 state=started
      with_items: "{{ zookeeperinstances.instances }}"

    - name: Launch kafka  instances
      ec2:
        aws_access_key: "{{ ec2.aws_access_key }}"
        aws_secret_key: "{{ ec2.aws_secret_key }}"
        key_name: "{{ ec2.key }}"
        group: "{{ ec2.kafka_security_group }}"
        instance_type: "{{ ec2.kafka_instance_type }}"
        image: "{{ ec2.image }}"
        wait: yes
        region: "{{ ec2.region }}"
        count_tag:
          Name: kafka
        exact_count: "{{ ec2.kafka_instance_count }}"
        instance_tags:
          Name: kafka
      register: kafkainstances

    - name: Add new instances to a host group
      add_host: name={{ item.1.public_dns_name }} groups=kafkanodes broker_id={{ item.0 + 1 }}
      with_indexed_items: "{{ kafkainstances.instances }}"

    - name: Wait for SSH to come up
      wait_for: host={{ item.public_dns_name }} port=22 delay=60 timeout=360 state=started
      with_items: "{{ kafkainstances.instances }}"
    
- name: Install JDK on Zookeeper instances
  hosts: zookeepernodes
  remote_user: ubuntu
  become: true
  become_method: sudo
  gather_facts: yes
  roles:
    - jdk

- name: Install and start Zookeeper
  hosts: zookeepernodes
  remote_user: ubuntu
  become: true
  become_method: sudo
  gather_facts: yes
  roles:
    - zookeeper

- name: Configure file system and install JDK on Kafka instances
  hosts: kafkanodes
  remote_user: ubuntu
  become: true
  become_method: sudo
  gather_facts: yes
  roles:
    - jdk

- name: Install and start Kafka
  hosts: kafkanodes
  remote_user: ubuntu
  become: true
  become_method: sudo
  gather_facts: yes
  roles:
    - kafka

